var Suit=function(t){"use strict";function e(t,e,r){return parseInt(t,+e).toString(+r)}const r={toBinary:function(t,r){return e(t,r,2)},toDecimal:function(t,r){const s=e(t,r,10);return+s<10?"0"+s:s},toOctal:function(t,r){const s=e(t,r,8);return+s<8?"0"+s:s},toHex:function(t,r){const s=e(t,r,16);return+s<16?"0"+s:s}},s={led:{type:{"01":"灯","0101":"单色光","0102":"落地灯","0103":"三色光","0111":"1路滑条调光","0112":"2路滑条调光","0113":"3路滑条","0114":"","0115":"","0116":"","0119":"单 + 双","0120":"","0121":"","0122":"","0132":"","0133":"风扇灯"},status:{},group:{root:["01"],simple:["01","02"],color:["03"],way:["13"]}},cooker:{type:{"02":"智能电饭煲"}},humidifier:{type:{"03":"智能加湿器"}},socketSwitch:{type:{"04":"插座开关","0401":"智能插座","0402":"单线开关","0403":"触摸开关","0412":"智能插座","0413":"智能插座","0414":"智能插座","0421":"1路开关","0422":"2路开关","0423":"3路开关","0424":"4路开关","0425":"普通触摸开关","0426":"普通触摸开关","0427":"普通触摸开关","0428":"普通触摸开关","0431":"一路情景面板","0432":"两路情景面板","0433":"3路情景面板","0434":"4路情景面板","0436":"六键情景","0441":"1路开关 + 3路情景面板","0442":"2路开关 + 3路情景面板","0443":"3路开关 + 3路情景面板","0451":"一键单线开关","0452":"二键单线开关","0462":"2开关+2情景面板","0480":"红外面板","0481":"红外面板","0483":"红外面板","0486":"六键情景+红外对管","0490":"WiFi插座","0491":"单一窗帘面板","0492":"两个窗帘面板"},status:{"0400":"关","0401":"开","0410":"置反","0411":"保持不变","04s1":"开","04s0":"关"},group:{root:["04"],touch:["02","21","22","23","24","25","26","28","51","52"],scene:["31","32","33","35"],mix:["41","42","43","62","83"],normal:["03","12","13","14"],simple:["01"]}},switchgear:{type:{"05":"","0501":"窗帘","0502":"投影仪幕布"},status:{"0500":"关","0501":"停","0510":"开"}},fans:{type:{"06":"智能风扇"}},airCleaner:{type:{"07":"智能空气净化器"}},tv:{type:{"08":"兼容型智能电视"}},usbRf:{type:{"09":"测试用USB_RF模块"}},gateway:{type:{10:"网关",1001:"通用版本",1002:"阿里版本"}},sensors:{type:{11:"传感器",1101:"光明",1102:"水浸",1103:"雷达",1104:"CO",1105:"环境（光湿温）",1106:"人体感应（雷达+红外）",1107:"空气质量（PM2.5+VOC）",1108:"供电检测器",1109:"虚拟雷达",1110:"光线传感器",1111:"温湿度传感器",1112:"烟雾传感器",1113:"超声波传感器",1114:"雷达传感器",1115:"插卡取电",1116:"环境传感器",1117:"感应面板",1118:"DC红外",1119:"AC红外",1120:"PM2.5",1121:"门窗磁",1122:"雷达灯",1123:"DC人体+光感",1124:"AC人体+光感"},status:{1100:"无人",1101:"有人","11fe":"通电导通","11fd":"断电","11ff":"首次上电"},group:{root:["11"],als:["01"],water:["02"],radar:["03"],co:["04"],env:["05"],body:["06"],electric:["08"],virtualRadar:["09"],light:["10"],humidifier:["11"],smoke:["12"],wave:["13"],radarSence:["14"],cardSense:["15"],envSense:["16"],induction:["17"],dc:"18",ac:"19",pm:["20"],gate:["21"],radarLight:["22"]}},meterReader:{type:{12:"智能抄表器",1201:"智能抄表器"}},wireControlPanel:{type:{13:"线控面板",1301:"空调线控器"},group:{root:["11"],ac:["01"]},status:{1300:"关",1301:"开"}},transponder:{type:{14:"红外转发器",1401:"蓝牙",1402:"wifi",1403:"红外线控面板"}},remoteControl:{type:{15:"智能遥控设备",1501:"手持单向遥控器"}},autoMover:{type:{16:"智能自行设备",1601:"飞机",1602:"机械车"},group:{plane:["01"]}},camera:{type:{17:"智能摄像类设备",1701:"固定摄像设备（家用）",1702:"防抖摄像设备（配合云台）"},group:{root:["17"],fixed:["01"],moving:["02"]}},finger:{type:{16:"智能门禁，中控指纹机"}},doorLock:{type:{21:"锁",2101:"亚太天能智能门锁",2102:"亿万家智能门锁",2103:"家居门锁",2104:"酒店门锁"},status:{2100:"指纹开锁",2101:"密码开锁",2102:"卡开锁",2103:"钥匙开锁",2104:"遥控开锁",2105:"临时用户开锁","21-1":"关闭","21open0":"指纹开锁","21open1":"密码开锁","21open2":"卡开锁","21open3":"钥匙开锁","21open4":"遥控开锁","21open5":"临时用户开锁","21close4":"反锁","21close5":"门关闭","21close7":"掩门","21close8":"锁开","21close9":"反锁开","21card":"门卡开锁",default:"关闭"},group:{root:["21"]}},remoteControlLamp:{type:{22:"遥控灯",2201:"遥控灯"}},smartCamera:{type:{32:"摄像头"}},wifiSocket:{type:{80:"单品wifi插座"}},wifiIr:{type:{81:"单品wifi红外转发器，不存储版本"}},obox:{type:{10:"obox",1010:"obox"},satus:{100:"离线",101:"在线"},group:{root:["10"]}}},o=Array.from(Object.keys(s)).reduce((t,e,r)=>(1===r&&(t=s[t].type),{...t,...s[e].type})),i=Array.from(Object.keys(s)).reduce((t,e,r)=>(1===r&&(t=s[t].status),{...t,...s[e].status}));String.prototype.toCapital=function(){return this.slice(0,1).toUpperCase()+this.slice(1)},String.prototype.toLower=function(){return this.slice(0,1).toLowerCase()+this.slice(1)};var c=new class{constructor(){this.__rootProcessor(),this.__subDeviceProcessor()}__handler(t,e,s){if(!t)return!1;if(!s)return!!t[r.toDecimal(e,16)];return!!t[r.toDecimal(e,16)+r.toDecimal(s,16)]}__handleSubType(t,e){return t.includes(r.toDecimal(e,16))}__rootProcessor(){Array.from(Object.keys(s)).map(t=>{const e=s[t].type;this[`is${t.toCapital()}`]=(t,r)=>this.__handler(e,t,r)})}__subDeviceProcessor(){Array.from(Object.keys(s)).map(t=>{const e=s[t].group,r=t.toCapital();e&&Array.from(Object.keys(e)).map(t=>{this[`is${t.toCapital()}${r}`]=r=>this.__handleSubType(e[t],r)})})}};var a=new class{constructor(){}__getStatusKey(t,e){return`${t}${e}`}__combineSocketStatus(t,e){let s=r.toBinary(e,16),o=[];for(let e=(s=s.length%2?`0${s}`:s).length;e>0;e-=2)o.push(i[this.__getStatusKey(t,s.slice(e-2,e))]);return o.join(",")}__parseSimpleSocket(t,e){let s=r.toBinary(e.slice(0,2),16);return s=s.slice(-4),i[this.__getStatusKey(t,`s${s.includes("1")?1:0}`)]}getSocketSwitchStatusDescriptor(t,e,r){return r?c.isSimpleSocketSwitch(r)?this.__parseSimpleSocket(e,t):c.isTouchSocketSwitch(r)||c.isNormalSocketSwitch(r)?this.__combineSocketStatus(e,t.slice(0,2)):c.isMixSocketSwitch(r)?this.__combineSocketStatus(e,t.slice(2,4)):c.isSceneSocketSwitch(r)?this.__combineSocketStatus(e,t.slice(6,8)):void 0:i[this.__getStatusKey(e,t.slice(6,8))]}getLedStatusDescriptor(t,e,s){let o=0,i=+r.toDecimal(t.slice(0,2),16);return c.isSimpleLed(s)&&(o=0===i?"灯灭":`${parseInt(100*(i-128)/126)}%`),c.isColorLed(s)&&(o=`${i}%`),c.isWayLed(s)&&(o=`${i}% ${+r.toDecimal(t.slice(2,4),16)}% ${+r.toDecimal(t.slice(4,6),16)}%`),o}getSensorsStatusDescriptor(t,e,r){return!r||c.isAcSensor(r)?i[this.__getStatusKey(e,t.slice(8,10))]:c.isCardSenseSensors(r)?i[this.__getStatusKey(e,t.slice(0,2))]:void 0}getDoorLockStatusDescriptor(t,e){const s=this;const o=t.slice(0,2);var c;return{"0xc3":(c=t.slice(8,10),i[s.__getStatusKey(e,`open${r.toDecimal(c,16)}`)]),"0xcd":i[this.__getStatusKey(e,"card")],"0xc6":function(t){return i[s.__getStatusKey(e,`close${r.toDecimal(t,16)}`)]}(t.slice(2,4))}[o]||i.default}getOboxStatusDescriptor(t,e){}getCookerStatusDescriptor(t,e){}getHumidifierStatusDescriptor(t,e){}getSwitchgearStatusDescriptor(t,e){const s=t.slice(0,2);return 4===r.toDecimal(s,16)?r.toDecimal(t.slice(2,4),16)+"%":i[this.__getStatusKey(e,s)]}getFansStatusDescriptor(t,e){}getAirCleanerStatusDescriptor(t,e){}getTvStatusDescriptor(t,e){}getGateWayStatusDescriptor(t,e){}getMeterReaderStatusDecriptor(t,e){}getWireControlPanelStatusDescriptor(t,e,r){if(this.isAcWireControlPanel(r))return i[this.__getStatusKey(e,t.slice(0,2))]}getTransponderStatusDescriptor(t,e){}getRemoteControlStatusDescriptor(t,e){}getAutoMoverStatusDescriptor(t,e){}getRemoteControlLampStatusDescriptor(t,e){}};var n=new class{constructor(){this.typeHints=c,this.statusDescriptor=a}getRootDeviceDescriptor(t){return o[r.toDecimal(t,16)]}getDeviceTypeDescriptor(t,e){const s=r.toDecimal(t,16),i=r.toDecimal(e,16);return o[s+i]}getStatusDescriptor(t,e,r){const o=`get${Array.from(Object.keys(s)).find(t=>{const r=t.toCapital();return this.typeHints[`is${r}`].call(this.typeHints,e)}).toCapital()}StatusDescriptor`;if(this.statusDescriptor[o])return this.statusDescriptor[o].call(this.statusDescriptor,t,e,r)}};return t.default=n,t}({});
